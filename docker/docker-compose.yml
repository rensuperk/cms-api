version: '3'

networks:
  cms:
    driver: bridge
    
services:
  mysql:
    image: mysql:8.2.0
    container_name: cms-mysql
    hostname: cms-mysql
    volumes:
      - ./data/mysql:/var/lib/mysql
      - ./logs/mysql:/var/log/mysql
      - ./docker-mysql/conf.d:/etc/mysql/conf.d
      - ./docker-mysql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    environment:
      - MYSQL_ROOT_PASSWORD=123456
    ports:
      - "3306:3306"
    restart: always
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    networks:
      - cms


  redis:
    container_name: cms-redis
    image: 7.2.2-alpine
    hostname: cms-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis:/data
    networks:
      - cms


  cms-vue-app:
    container_name: cms-vue-app
    image: registry.cn-hangzhou.aliyuncs.com/superk/cms-vue-app
    ports:
      - "80:80"
    volumes:
#      - /opt/cms-vue-app:/app
      - ./docker-nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - cms

  cms-app:
    container_name: cms-app
    image: registry.cn-hangzhou.aliyuncs.com/superk/cms-app
    hostname: cms-app
    ports:
      - "8080:8080"
    volumes:
      - ./logs/cms-api:/app/logs
    networks:
      - cms

#  registry:
#    image: registry
#    container_name: registry
#    restart: always
#    ports:
#     - "5000:5000"
#    volumes:
#     - ./registry/data:/var/lib/registry
#    networks:
#      - cms


#  cms-nginx:
#    image: nginx:latest
#    container_name: cms-nginx
#    hostname: cms-nginx
#    volumes:
#      - ./docker-nginx:/etc/nginx/conf.d
#    ports:
#      - "80:80"
#    networks:
#      - cms